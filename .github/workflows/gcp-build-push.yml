name: gcp-build-push

on:
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'master'

env:
  REGISTRY_USER: _json_key
  IMAGE_REGISTRY: gcr.io/dev-project-311801
  REGISTRY_PASSWORD: ${{ secrets.GCP_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'

      - name: Cache the Maven Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Test with Maven
        run: mvn test -Punittest -f pom.xml

      - name: Build with Maven
        run: mvn clean -B package -DskipTests -f pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER}}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: .
          push: true
          tags: ${{ env.IMAGE_REGISTRY }}/yet-another-hello-world:dev

      - name: Check Code Coverage
        run: mvn clean -B verify -f pom.xml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.CLOUD_RUN_KEY }}'

      - id: 'deploy'
        name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          metadata: gcp-service.yaml

      - name: 'Run Integration Test'
        run: 'mvn test -Pintegration -DGCP_HELLO_WORLD_URL=${{ steps.deploy.outputs.url }}'

